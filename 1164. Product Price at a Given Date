Write a solution to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Products table:
+------------+-----------+-------------+
| product_id | new_price | change_date |
+------------+-----------+-------------+
| 1          | 20        | 2019-08-14  |
| 2          | 50        | 2019-08-14  |
| 1          | 30        | 2019-08-15  |
| 1          | 35        | 2019-08-16  |
| 2          | 65        | 2019-08-17  |
| 3          | 20        | 2019-08-18  |
+------------+-----------+-------------+
Output: 
+------------+-------+
| product_id | price |
+------------+-------+
| 2          | 50    |
| 1          | 35    |
| 3          | 10    |
+------------+-------+


Solution:

select product_id ,
     (case when change_date>'2019-08-16' then 10 else new_price end) as price

      from
       (select product_id ,new_price,change_date,
  row_number() over (partition by product_id order by (case when change_date<='2019-08-16' then change_date else '1900-01-01' end) desc)
      as rnum   
    from Products) a
    where rnum=1
